apiVersion: v1
kind: Service
metadata:
  name: todolistapp-springboot-service
  annotations:
    oci.oraclecloud.com/load-balancer-type: "lb"
    oci.oraclecloud.com/loadbalancer-policy: "IP_HASH"
spec:
  type: LoadBalancer
  loadBalancerIP: "159.54.139.206"
  externalTrafficPolicy: Local

  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: todolistapp-springboot
---
#this is new stuff for hosting on the load balancer
apiVersion: v1
kind: Service
metadata:
  name: todolistapp-backend-router
spec:
  selector:
    app: todolistapp-springboot
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todolistapp-springboot-deployment
spec:
  selector:
    matchLabels:
      app: todolistapp-springboot
  #replicas: 1
  template:
    metadata:
      labels:
        app: todolistapp-springboot
        version: v1
    spec:
      containers:
        - name: todolistapp-springboot
          image: "ghcr.io/oracle35/todoapp:${GIT_HASH}" 
          imagePullPolicy: Always
          env:
            - name: db_user
              value: "TODOUSER"
            - name: db_url
              value: "jdbc:oracle:thin:@t35todoappp5268_tp?TNS_ADMIN=/mtdrworkshop/creds"
            - name: driver_class_name
              value: "oracle.jdbc.OracleDriver"
            - name: dbpassword
              valueFrom:
                secretKeyRef:
                  name: dbuser
                  key: dbpassword
                  optional: true
            - name: gemini_api_key
              valueFrom:
                secretKeyRef:
                  name: gemini-api-secret
                  key: gemini_api_key
            - name: telegram_bot_token
              valueFrom:
                secretKeyRef:
                  name: telegram-bot-secret
                  key: token
            - name: telegram_bot_name
              valueFrom:
                secretKeyRef:
                  name: telegram-bot-secret
                  key: name
          volumeMounts:
            - name: creds
              mountPath: /mtdrworkshop/creds
          ports:
            - containerPort: 8080
      restartPolicy: Always
      volumes:
        - name: creds
          secret:
            secretName: db-wallet-secret
      # topologySpreadConstraints:
      #   - maxSkew: 1
      #     topologyKey: kubernetes.io/hostname
      #     whenUnsatisfiable: DoNotSchedule
      #     labelSelector:
      #       matchLabels:
      #         app: todolistapp-springboot
---
